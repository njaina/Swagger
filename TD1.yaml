openapi: 3.0.1
info:
  title: STD21014 API
  description: 'Global description of my API'
  version: 1.0.0
servers:
 - url: https://STD21014.com
tags: 
 - name: Students
 - name: Courses
paths:
 /Students:
    get:
      tags:
        - Students
      operationId: getStudents
      summary: Get all students
      description: Get all students with details
      responses:
        200: 
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
    post: 
      tags:
        - Students
      operationId: createStudent
      summary : Create new student
      description: Create new student
      requestBody:
        description: Student to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudent'
        required: true
      responses:
        200:
          description: List of students
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        400:
          description: Bad request
    patch:
      tags:
        - Students
      operationId: update student
      summary: update student
      description: update student
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/patchStudent'
              
      responses:
        200: 
          description: deleted students
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/StudentDelete'
        400:
          description: Bad request  
 /Students/{id}:
    get:
      tags:
        - Students
      operationId: get student by id
      summary: get student by id
      description: Get all students with details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200: 
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
    delete:
      tags:
        - Students
      operationId: delete student by id
      summary: delete student by id
      description: Get all students with details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200: 
          description: deleted students
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/StudentDelete'
        400:
          description: Bad request
 /Courses:
    get:
      tags:
        - Courses
      operationId: get course
      summary: get course
      description: get course
      responses:
        200: 
          description: course
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/getCourse'
        400:
          description: Bad request
    post:
      tags:
        - Courses
      operationId: add course
      summary: change course
      description: get course
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/createCourse'
        
      responses:
        200: 
          description: course
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/StudentDelete'
        400:
          description: Bad request
    patch:
      tags:
        - Courses
      operationId: update course
      summary: get course
      description: get course
      responses:
        200: 
          description: course
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/StudentDelete'
        400:
          description: Bad request
    put:
      tags:
        - Courses
      operationId: change cousrse
      summary: change course
      description: change course
      responses:
        200: 
          description: course
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/StudentDelete'
        400:
          description: Bad request
 /Courses/{id}:
    get:
      tags:
        - Courses
      operationId: get course by id
      summary: get course by id
      description: Get all students with details
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        200: 
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/Student'
        400:
          description: Bad request
    delete:
      tags:
        - Courses
      operationId: delete teacher by id and name
      summary: delete teacher by id and name 
      description: Get all students with details
      parameters:
          - name: id
            in: path
            required: true
            schema:
              type: integer 
      responses:
        200: 
          description: deleted students
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/StudentDelete'
        400:
          description: Bad request      
components:
  schemas:
    CreateStudent:
      type: object
      properties:
        name:
          type: string
          example: "Rakoto"
        birth_date:
          type: string
          format: date
          example: "2022-01-01"
    Student:
      allOf:
        - $ref: '#/components/schemas/CreateStudent'
      type: object
      properties:
        id:
          type: integer
          example: 
    StudentDelete:
      type: object
      properties:
        id:
          type: integer
          example: 1
    getCourse:
      type: object
      properties:
        name:
          type: string
          example: "course Test"  
    patchStudent:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: 'John JohnSon'
        address:
          type: string
          example: 'Analamahitsy Antananarivo'
        phoneNumber:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumber'
    PhoneNumber:
      type: object
      properties:
          country-code:
            type: string
            example: '+261'
          number:
            type: string
            example: '0340302243'  
    createCourse:
      type: object
      properties:
        name:
          type: string
          example: 'EL1 P3'
